## Mini-workflow that prepares observations for IODA ingest
{% set PrepareObservations = "GetObs => ObsToIODA" %}

## Mini-workflow that prepares a cold-start initial condition file from a GFS analysis
{% if InitializationType == "WarmStart" %}
  # assume that cold-start IC files are already available for WarmStart case
  {% set PrepareExternalAnalysis = "ColdStartAvailable" %}
{% else %}
  {% set PrepareExternalAnalysis = "GetGFSanalysis => UngribColdStartIC => GenerateColdStartIC => ColdStartAvailable" %}
{% endif %}

## Data Assimilation mini-workflow (DAPath)
{% set DABypass = "\n        DataAssimFinished" %}
{% set DAPath = "" %}

## Mini-workflow for observation processing
# Pre-DA observation processing
{% set DAPath = DAPath + "\n        "+PrepareObservations+" => InitDataAssim" %}

# Pre-DA inflation
{% if ABEInflation %}
  {% set DAPath = DAPath + "\n        ForecastFinished[-PT"+FC2DAOffsetHR+"H]" %}
  {% set DAPath = DAPath + " => MeanBackground" %}
  {% set DAPath = DAPath + " => HofXEnsMeanBG" %}
  {% set DAPath = DAPath + " => GenerateABEInflation" %}
  {% set DAPath = DAPath + "\n        GenerateABEInflation => InitDataAssim" %}
  {% set DAPath = DAPath + "\n        GenerateABEInflation => CleanHofXEnsMeanBG" %}
{% endif %}

# Data assimilation
{% set DAPath = DAPath + "\n        InitDataAssim => DataAssim" %}
{% set DAPath = DAPath + "\n        DataAssim:succeed-all => DataAssimFinished" %}
{% set DAPath = DAPath + "\n        DataAssimFinished => CleanDataAssim" %}

# Post-DA inflation
{% if (RTPPInflationFactor > 0.0 and nEnsDAMembers > 1) %}
  {% set DAPath = DAPath + "\n        DataAssim:succeed-all => RTPPInflation => DataAssimFinished" %}
{% endif %}

## Forecast mini-workflow (FCPath)
{% set FCBypass = "\n        ForecastFinished" %}
{% set FCPath = "" %}
# precede Forecast with PrepareExternalAnalysis to ensure there is a GFS analysis file valid
# at the analysis time from which to pull sea-surface fields
{% set FCPath = FCPath + "\n        "+PrepareExternalAnalysis+" => Forecast" %}
{% set FCPath = FCPath + "\n        Forecast:succeed-all => ForecastFinished" %}
{% if InitializationType == "WarmStart" %}
  {% set firstCycleCriticalPath = "\n        GetWarmStartIC => ForecastFinished" %}
{% else %}
  {% set firstCycleCriticalPath = FCPath %}
{% endif %}

## Critical path cycle dependencies
{% if CriticalPathType == "Normal" %}
  {% set DACriticalPath = DAPath %}
  {% set DACriticalPath = DACriticalPath + "\n        ForecastFinished[-PT"+FC2DAOffsetHR+"H] => InitDataAssim" %}

  {% set FCCriticalPath = FCPath %}
  {% set FCCriticalPath = FCCriticalPath + "\n        DataAssimFinished[-PT"+DA2FCOffsetHR+"H] => Forecast" %}

{% elif CriticalPathType == "Bypass" %}
  {% set DACriticalPath = DABypass %}
  {% set FCCriticalPath = FCBypass %}

{% elif CriticalPathType == "Reanalysis" %}
  {% set DACriticalPath = DAPath %}
  {% set FCCriticalPath = FCBypass %}

{% elif CriticalPathType == "Reforecast" %}
  {% set DACriticalPath = DABypass %}
  {% set FCCriticalPath = FCPath %}

{# else #}
  {{ raise('CriticalPathType is not valid') }}
{% endif %}
