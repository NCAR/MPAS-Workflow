  # ... for deterministic DA in observation space only (OMB+OMA together)
#TODO: enable VerifyObsDA to handle more than one ensemble member
#      and use feedback files from EDA for VerifyEnsMeanBG
{% if VerifyDeterministicDA and nMembers < 2 and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"]  %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        DataAssimFinished => VerifyObsDA
        VerifyObsDA => {{CleanDataAssim}}
  {% if CompareDA2Benchmark %}
        VerifyObsDA => CompareObsDA
  {% endif %}
      '''
{% endif %}


  # ... for background-duration forecast from deterministic analysis or ensemble of analyses
{% if (VerifyBGMembers or (VerifyEnsMeanBG and nMembers == 1)) and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}

    [[[{{AnalysisTimes}}]]]
      graph = '''
        ForecastFinished[-PT{{FC2DAOffsetHR}}H] => HofXBG
        {{PrepareObservations}} => HofXBG
        HofXBG:succeed-all => VerifyObsBG
        VerifyObsBG:succeed-all => CleanHofXBG
    {% if CompareBG2Benchmark %}
        VerifyObsBG:succeed-all => CompareObsBG
    {% endif %}
      '''
{% endif %}


  # ... for mean of ensemble of backgrounds and ensemble spread (bg only for obs, bg+an for model)
{% if VerifyEnsMeanBG and nMembers > 1 and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        MeanBackground => HofXEnsMeanBG
        {{PrepareObservations}} => HofXEnsMeanBG
        HofXEnsMeanBG => VerifyObsEnsMeanBG
        VerifyObsEnsMeanBG => CleanHofXEnsMeanBG
  {% if DiagnoseEnsSpreadBG %}
        ForecastFinished[-PT{{FC2DAOffsetHR}}H] => HofXBG
        HofXBG:succeed-all => VerifyObsEnsMeanBG
        VerifyObsEnsMeanBG => CleanHofXBG
  {% endif %}
      '''
{% endif %}


  # ... for ensemble of analyses
{% if VerifyANMembers and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        DataAssimFinished => HofXAN
        HofXAN:succeed-all => VerifyObsAN
        VerifyObsAN:succeed-all => CleanHofXAN
      '''
{% endif %}


  # ... for extended forecast from deterministic analysis or mean of ensemble of analyses
  # note: assumes that obs and verifying analyses are available at extended forecast times
{% if VerifyExtendedMeanFC %}
  {% for TIME in extMeanTimesList %}
    [[[R{{nExtOuts}}/{{TIME}}/PT{{extIntervHR}}H]]]
      graph = '''
        {{PrepareObservations}}
      '''
    {% for dt in extLengths %}
    [[[{{TIME}}]]]
      graph = '''
        ExtendedForecastFinished => HofXMeanFC{{dt}}hr
        ObsReady[PT{{dt}}H] => HofXMeanFC{{dt}}hr
        HofXMeanFC{{dt}}hr => VerifyObsMeanFC{{dt}}hr
        VerifyObsMeanFC{{dt}}hr => CleanHofXMeanFC{{dt}}hr
      '''
    {% endfor %}
  {% endfor %}
{% endif %}


  # ... for extended forecast from ensemble of analyses
  # note: assumes that obs and verifying analyses are available at extended forecast times
{% if VerifyExtendedEnsFC and nMembers > 1 %}
  {% for TIME in extEnsTimesList %}
    [[[R{{nExtOuts}}/{{TIME}}/PT{{extIntervHR}}H]]]
      graph = '''
        {{PrepareObservations}}
      '''
    {% for dt in extLengths %}
    [[[{{TIME}}]]]
      graph = '''
      {% for mem in EnsVerifyMembers %}
        ExtendedForecastFinished => HofXEnsFC{{mem}}-{{dt}}hr
        ObsReady[PT{{dt}}H] => HofXEnsFC{{mem}}-{{dt}}hr
        HofXEnsFC{{mem}}-{{dt}}hr => VerifyObsEnsFC{{mem}}-{{dt}}hr
        VerifyObsEnsFC{{mem}}-{{dt}}hr => CleanHofXEnsFC{{mem}}-{{dt}}hr
      {% endfor %}
      '''
    {% endfor %}
  {% endfor %}
{% endif %}
