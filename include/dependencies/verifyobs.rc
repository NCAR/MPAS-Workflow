  # ... for deterministic DA in observation space only (OMB+OMA together)
#TODO: enable VerifyObsDA to handle more than one ensemble member
#      and use feedback files from EDA for VerifyEnsMeanBG
{% if VerifyDeterministicDA and nMembers < 2 and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"]  %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        DAFinished => VerifyObsDA
        VerifyObsDA => CleanDA
  {% if compareDaToBenchmark %}
        VerifyObsDA => CompareObsDA
  {% endif %}
      '''
{% endif %}


  # ... for background-duration forecast from deterministic analysis or ensemble of analyses
{% if (VerifyBGMembers or (VerifyEnsMeanBG and nMembers == 1)) and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}

    [[[{{AnalysisTimes}}]]]
      graph = '''
        ForecastFinished[-PT{{FC2DAOffsetHR}}H] => HofXBG
        {{PrepareObservations}} => HofXBG
        HofXBG:succeed-all => VerifyObsBG
        VerifyObsBG:succeed-all => CleanHofXBG
    {% if compareBgToBenchmark %}
        VerifyObsBG:succeed-all => CompareObsBG
    {% endif %}
      '''
{% endif %}


  # ... for mean of ensemble of backgrounds and ensemble spread (bg only for obs, bg+an for model)
{% if VerifyEnsMeanBG and nMembers > 1 and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        MeanBackground => HofXEnsMeanBG
        {{PrepareObservations}} => HofXEnsMeanBG
        HofXEnsMeanBG => VerifyObsEnsMeanBG
        VerifyObsEnsMeanBG => CleanHofXEnsMeanBG
  {% if DiagnoseEnsSpreadBG %}
        ForecastFinished[-PT{{FC2DAOffsetHR}}H] => HofXBG
        HofXBG:succeed-all => VerifyObsEnsMeanBG
        VerifyObsEnsMeanBG => CleanHofXBG
  {% endif %}
      '''
{% endif %}


  # ... for ensemble of analyses
{% if VerifyANMembers and CriticalPathType in ["Normal", "Reanalysis", "Bypass", "Reforecast"] %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
        DAFinished => HofXAN
        HofXAN:succeed-all => VerifyObsAN
        VerifyObsAN:succeed-all => CleanHofXAN
      '''
{% endif %}


  # ... for extended forecast from deterministic analysis or mean of ensemble of analyses
  # note: assumes that obs and verifying analyses are available at extended forecast times
{% if VerifyExtendedMeanFC %}
    [[[{{extMeanTimes}}]]]
      graph = '''
%include include/dependencies/auto/observations.rc
      '''

  {% for dt in extLengths %}
    {% set dtStr = "-"+(dt|string)+"hr" %}
    {% if dt == 0 %}
      {% set success = ":succeed-all" %}
    {% else %}
      {% set success = "" %}
    {% endif %}
    {% set prep = (dtStr+success+" => ").join(PrepareObservationsTasks)+dtStr %}
    [[[{{extMeanTimes}}]]]
      graph = '''
        {{prep}}
        ExtendedForecastFinished => HofXMeanFC{{dtStr}}
        ObsReady{{dtStr}}{{success}} => HofXMeanFC{{dtStr}}
        HofXMeanFC{{dtStr}} => VerifyObsMeanFC{{dtStr}}
        VerifyObsMeanFC{{dtStr}} => CleanHofXMeanFC{{dtStr}}
      '''
  {% endfor %}
{% endif %}


  # ... for extended forecast from ensemble of analyses
  # note: assumes that obs and verifying analyses are available at extended forecast times
{% if VerifyExtendedEnsFC and nMembers > 1 %}
    [[[{{extEnsTimes}}]]]
      graph = '''
%include include/dependencies/auto/observations.rc
      '''

  {% for dt in extLengths %}
    {% set dtStr = "-"+(dt|string)+"hr" %}
    {% if dt == 0 %}
      {% set success = ":succeed-all" %}
    {% else %}
      {% set success = "" %}
    {% endif %}
    {% set prep = (dtStr+success+" => ").join(PrepareObservationsTasks)+dtStr %}
    [[[{{extEnsTimes}}]]]
      graph = '''
        {{prep}}
    {% for mem in EnsVerifyMembers %}
        ExtendedForecastFinished => HofXEnsFC{{mem}}{{dtStr}}
        ObsReady{{dtStr}}{{success}} => HofXEnsFC{{mem}}{{dtStr}}
        HofXEnsFC{{mem}}{{dtStr}} => VerifyObsEnsFC{{mem}}{{dtStr}}
        VerifyObsEnsFC{{mem}}{{dtStr}} => CleanHofXEnsFC{{mem}}{{dtStr}}
    {% endfor %}
      '''
  {% endfor %}
{% endif %}
