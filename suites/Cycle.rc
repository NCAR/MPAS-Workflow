#!Jinja2

%include include/variables/auto/experiment.rc
%include include/variables/auto/extendedforecast.rc
%include include/variables/auto/externalanalyses.rc
%include include/variables/auto/firstbackground.rc
%include include/variables/auto/hpc.rc
%include include/variables/auto/observations.rc
%include include/variables/auto/workflow.rc

[meta]
  title = "{{title}}"

[cylc]
  UTC mode = False
  [[environment]]
[scheduling]
  initial cycle point = {{restartCyclePoint}}
  final cycle point   = {{finalCyclePoint}}

  # Maximum number of simultaneous active dates;
  # useful for constraining non-blocking flows
  # and to avoid over-utilization of login nodes
  # hint: execute 'ps aux | grep $USER' to check your login node overhead
  # default: 3
  max active cycle points = {{maxActiveCyclePoints}}

  [[queues]]
%include include/queues/auto/externalanalyses.rc
%include include/queues/auto/initic.rc
%include include/queues/auto/observations.rc

  [[dependencies]]

# firstCyclePoint
{% if restartCyclePoint == firstCyclePoint %}
    [[[R1]]]
      graph = '''
        # prepare first DA background state
        {{PrepareExternalAnalysisOuter}} => {{PrepareFirstBackgroundOuter}}

        # prepare analyses (init) files (for dual-mesh Variational) for reading to
        # static and input stream in all cycles for inner and ensemble geometries
        {{PrepareExternalAnalysisInner}}
        {{PrepareExternalAnalysisEnsemble}}
      '''
{% endif %}

# all other cycles
{% if CriticalPathType == "Normal" %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
%include include/dependencies/auto/da.rc
        # depends on previous Forecast
        ForecastFinished[-PT{{FC2DAOffsetHR}}H] => PreDA
      '''

# TODO: add IAU graph

    [[[{{ForecastTimes}}]]]
      graph = '''
%include include/dependencies/auto/forecast.rc
        # depends on previous DA
        DAFinished[-PT{{DA2FCOffsetHR}}H] => Forecast
      '''

{% elif CriticalPathType == "Reanalysis" %}
    [[[{{AnalysisTimes}}]]]
      graph = '''
%include include/dependencies/auto/da.rc
      '''
    [[[{{ForecastTimes}}]]]
      graph = ForecastFinished

{% elif CriticalPathType == "Reforecast" %}
    [[[{{ForecastTimes}}]]]
      graph = '''
%include include/dependencies/auto/forecast.rc
      '''

{% elif CriticalPathType == "Bypass" %}
    [[[{{ForecastTimes}}]]]
      graph = ForecastFinished

{% else %}
    {{ raise('CriticalPathType is not valid') }}
{% endif %}

# background-time verification
# TODO: test for when no verification is turned on to ensure error does not occur
    [[[{{AnalysisTimes}}]]]
      graph = '''
%include include/dependencies/auto/postbg.rc
%include include/dependencies/auto/postda.rc
      '''

# optional extended forecasts for verification
{% if VerifyExtendedMeanFC %}
    [[[{{extMeanTimes}}]]]
      graph = '''
        DAFinished => MeanAnalysis => ExtendedMeanFC => ExtendedForecastFinished
%include include/dependencies/auto/postfc.rc
      '''
{% endif %}
{% if VerifyExtendedEnsFC and nMembers > 1 %}
    [[[{{extEnsTimes}}]]]
      graph = '''
        DAFinished => ExtendedEnsFC:succeed-all => ExtendedForecastFinished
%include include/dependencies/auto/postensfc.rc
      '''
{% endif %}

[runtime]
%include include/tasks/base.rc
%include include/tasks/auto/benchmark.rc
%include include/tasks/auto/da.rc
%include include/tasks/auto/forecast.rc
%include include/tasks/auto/firstbackground.rc
%include include/tasks/auto/externalanalyses.rc
%include include/tasks/auto/initic.rc
%include include/tasks/auto/observations.rc
%include include/tasks/auto/postbg.rc
%include include/tasks/auto/postda.rc
%include include/tasks/auto/postfc.rc

[visualization]
  initial cycle point = {{restartCyclePoint}}
  final cycle point   = {{finalCyclePoint}}
  number of cycle points = 200
  default node attributes = "style=filled", "fillcolor=grey"
